root@srv1064472:/var/www/supernxt.com# # Move files up one level
cd /var/www/supernxt.com
mv dist/* .
rmdir dist

# Verify correct structure now
ls -la

# Should see: index.js and public folder directly in /var/www/supernxt.com
mv: cannot overwrite './dist': Directory not empty
rmdir: failed to remove 'dist': Directory not empty
total 12
drwxr-xr-x 3 root root 4096 Oct 15 14:29 .
drwxr-xr-x 4 root root 4096 Oct 15 14:15 ..
drwxr-xr-x 3 root root 4096 Oct 15 14:29 dist
root@srv1064472:/var/www/supernxt.com# # See all files including hidden ones
ls -la dist/

# Force move everything including hidden files
cd /var/www/supernxt.com
mv dist/index.js .
mv dist/public .
rm -rf dist

# Verify
ls -la
total 12
drwxr-xr-x 3 root root 4096 Oct 15 14:29 .
drwxr-xr-x 3 root root 4096 Oct 15 14:29 ..
drwxr-xr-x 3 root root 4096 Oct 15 14:29 dist
mv: cannot stat 'dist/index.js': No such file or directory
mv: cannot stat 'dist/public': No such file or directory
total 8
drwxr-xr-x 2 root root 4096 Oct 15 14:32 .
drwxr-xr-x 4 root root 4096 Oct 15 14:15 ..
root@srv1064472:/var/www/supernxt.com# cd /var/www/supernxt.com

# Create PM2 configuration file
cat > ecosystem.config.cjs << 'EOF'
module.exports = {
  apps: [{
    name: 'supernxt',
    script: './index.js',
    env: {
      NODE_ENV: 'production',
      PORT: 5000
    }
  }]
}
EOF

# Start the app with PM2
pm2 start ecosystem.config.cjs

# Save PM2 configuration to auto-restart on reboot
pm2 save
pm2 startup

# Check if app is running
pm2 status

# View logs (should see "serving on port 5000")
pm2 logs supernxt --lines 10 --nostream

# Test the app
curl -I http://localhost:5000
[PM2][WARN] Applications supernxt not running, starting...
[PM2] App [supernxt] launched (1 instances)
┌────┬─────────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐
│ id │ name        │ namespace   │ version │ mode    │ pid      │ uptime │ ↺    │ status    │ cpu      │ mem      │ user     │ watching │
├────┼─────────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤
│ 0  │ supernxt    │ default     │ N/A     │ fork    │ 18137    │ 0s     │ 0    │ online    │ 0%       │ 34.4mb   │ root     │ disabled │
└────┴─────────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘
[PM2] Saving current process list...
[PM2] Successfully saved in /root/.pm2/dump.pm2
[PM2] Init System found: systemd
Platform systemd
Template
[Unit]
Description=PM2 process manager
Documentation=https://pm2.keymetrics.io/
After=network.target

[Service]
Type=forking
User=root
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity
Environment=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
Environment=PM2_HOME=/root/.pm2
PIDFile=/root/.pm2/pm2.pid
Restart=on-failure

ExecStart=/usr/lib/node_modules/pm2/bin/pm2 resurrect
ExecReload=/usr/lib/node_modules/pm2/bin/pm2 reload all
ExecStop=/usr/lib/node_modules/pm2/bin/pm2 kill

[Install]
WantedBy=multi-user.target

Target path
/etc/systemd/system/pm2-root.service
Command list
[ 'systemctl enable pm2-root' ]
[PM2] Writing init configuration in /etc/systemd/system/pm2-root.service
[PM2] Making script booting at startup...
[PM2] [-] Executing: systemctl enable pm2-root...
Created symlink /etc/systemd/system/multi-user.target.wants/pm2-root.service → /etc/systemd/system/pm2-root.service.
[PM2] [v] Command successfully executed.
+---------------------------------------+
[PM2] Freeze a process list on reboot via:
$ pm2 save

[PM2] Remove init script via:
$ pm2 unstartup systemd
┌────┬─────────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐
│ id │ name        │ namespace   │ version │ mode    │ pid      │ uptime │ ↺    │ status    │ cpu      │ mem      │ user     │ watching │
├────┼─────────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤
│ 0  │ supernxt    │ default     │ N/A     │ fork    │ 18259    │ 0s     │ 5    │ online    │ 0%       │ 62.8mb   │ root     │ disabled │
└────┴─────────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘
[TAILING] Tailing last 10 lines for [supernxt] process (change the value with --lines option)
/root/.pm2/logs/supernxt-out.log last 10 lines:
/root/.pm2/logs/supernxt-error.log last 10 lines:
0|supernxt |     at packageResolve (node:internal/modules/esm/resolve:767:81)
0|supernxt |     at moduleResolve (node:internal/modules/esm/resolve:853:18)
0|supernxt |     at defaultResolve (node:internal/modules/esm/resolve:983:11)
0|supernxt |     at #cachedDefaultResolve (node:internal/modules/esm/loader:731:20)
0|supernxt |     at ModuleLoader.resolve (node:internal/modules/esm/loader:708:38)
0|supernxt |     at ModuleLoader.getModuleJobForImport (node:internal/modules/esm/loader:310:38)
0|supernxt |     at ModuleJob._link (node:internal/modules/esm/module_job:183:49)
0|supernxt |     at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
0|supernxt |   code: 'ERR_MODULE_NOT_FOUND'
0|supernxt | }

curl: (7) Failed to connect to localhost port 5000 after 0 ms: Couldn't connect to server
root@srv1064472:/var/www/supernxt.com#
